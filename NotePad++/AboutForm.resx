<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAKmomAClpZQApqWVLKallL+mpZX8pqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/6al
        lf+mpZX/pqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/KallL+mpZUspaWUAKmo
        mAAAAAAAAAAAAAAAAAAAAAAAp6aWAKOjkQeop5imsrCk/7q3rv+7uK//u7iv/7u4r/+7uK//u7iv/7u4
        r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+6t67/srCk/6in
        mKajo5IHp6aWAAAAAAAAAAAAAAAAAAAAAACqqJkAp6aWHLm2rNzGwrz/yMS+/8jEvv/IxL7/yMS+/8jE
        vv/IxL7/yMS+/8jEvv/IxL7/yMS+/8jEvv/IxL7/yMS+/8jEvv/IxL7/yMS+/8jEvv/IxL7/yMS+/8jE
        vv/Gwrz/ubas3KemlhyqqJkAAAAAAAAAAAAAAAAAAAAAAL26sQC+urEfxcG74MfDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/FwbvgvrqxH726sQAAAAAAAAAAAAAAAAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDveDHw70fx8O9AAAAAAAAAAAAAAAAAAAAAADHw70Ax8O9H8fD
        veDHw73/x8O9/8fDvf/IxL7/yMS+/8jEvv/IxL7/yMS+/8nFv//JxcD/yMS//8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O94MfDvR/Hw70AAAAAAAAAAAAAAAAAAAAAAMfD
        vQDHw70fx8O94MfDvf/Hw73/xsK7/7y5sf+7uK//u7iv/7u4r/+7uK//qKGX/5yTif+spJz/xsK8/8jE
        vf/IxL3/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73gx8O9H8fDvQAAAAAAAAAAAAAA
        AAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fDvf/EwLn/raye/6qpmv+qqZr/qqma/6momf9zZVL/ZFNC/6mh
        mP/Jxb7/sbfA/7G3wP/JxL3/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDveDHw70fx8O9AAAA
        AAAAAAAAAAAAAAAAAADHw70Ax8O9H8fDveDHw73/x8O9/8fDvP/Dv7n/w7+4/8O/uP/Dv7j/wby1/5OG
        eP/Fvrb/1dHK/6y0wP8zcM3/MnDN/6y0wP/JxL3/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O94MfD
        vR/Hw70AAAAAAAAAAAAAAAAAAAAAAMfDvQDHw70fx8O94MfDvf/Hw73/x8O9/8jEvv/IxL7/yMS+/8jE
        vv/Hw73/2dbQ//Xz7v/Q2+X/PHvU/wBS0/8AU9P/M3DN/6y0wP/Kxb3/yMS+/8jEvv/Hw73/x8O9/8fD
        vf/Hw73gx8O9H8fDvQAAAAAAAAAAAAAAAAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fDvf/Gwrv/vLmx/7u4
        r/+7uK//u7iv/7u4r//W1Mz/09/r/1ic6P8bd+T/CF7Y/wBT0/8AU9P/M3DN/6Stt/+9ua7/vLmx/8bC
        u//Hw73/x8O9/8fDveDHw70fx8O9AAAAAAAAAAAAAAAAAAAAAADHw70Ax8O9H8fDveDHw73/x8O9/8TA
        uf+trJ7/qqma/6qpmv+qqZr/qqma/7CvoP96o8z/IX7m/yJ+5v8deOP/CF7Y/wBT0/8AU9P/K2nD/5Kc
        oP+wrZ7/w8C5/8fDvf/Hw73/x8O94MfDvR/Hw70AAAAAAAAAAAAAAAAAAAAAAMfDvQDHw70fx8O94MfD
        vf/Hw73/x8O8/8O/uf/Dv7j/w7+4/8O/uP/Dv7j/w7+4/7i7vP9imdb/In7m/yJ+5v8deOP/CF7Y/wBT
        0/8AU9P/MG7K/6ixvP/JxLz/x8O9/8fDvf/Hw73gx8O9H8fDvQAAAAAAAAAAAAAAAAAAAAAAx8O9AMfD
        vR/Hw73gx8O9/8fDvf/Hw73/yMS+/8jEvv/IxL7/yMS+/8jEvv/IxL7/ycS+/76/wP9jmdf/I37m/yJ+
        5v8deOP/CF7Y/wBT0/8AU9T/M3HO/6y0wP/JxL3/x8O9/8fDveDHw70fx8O9AAAAAAAAAAAAAAAAAAAA
        AADHw70Ax8O9H8fDveDHw73/x8O9/8bCu/+8ubH/u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//vLmu/7G0
        sf9akcz/In7l/yJ+5v8deOP/CF7Y/wBT0/8AU9P/M3DN/6y0wP/JxL3/x8O94MfDvR/Hw70AAAAAAAAA
        AAAAAAAAAAAAAMfDvQDHw70fx8O94MfDvf/Hw73/xMC5/62snv+qqZr/qqma/6qpmv+qqZr/qqma/6qp
        mv+qqZr/q6ma/6Knn/9ZkMv/In7m/yJ+5v8deOP/CF7Y/wBT0/8AU9P/M3DN/6y0wP/KxL3gx8O9H8fD
        vQAAAAAAAAAAAAAAAAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fDvf/Hw7z/w7+5/8O/uP/Dv7j/w7+4/8O/
        uP/Dv7j/w7+4/8O/uP/Dv7j/xMC4/7q8vP9imdb/In7m/yJ+5v8deOP/CF7Y/wBT0/8AU9P/NHHN/6iy
        weDTyrwfycS9AAAAAAAAAAAAAAAAAAAAAADHw70Ax8O9H8fDveDHw73/x8O9/8fDvf/IxL7/yMS+/8jE
        vv/IxL7/yMS+/8jEvv/IxL7/yMS+/8jEvv/IxL7/ycS+/76/wP9jmdf/I37m/yJ+5v8deOP/CF7Y/wBT
        0/8AU9P/JWnP6VqGyjQ+d8wAy8fCAAAAAAAAAAAAAAAAAMfDvQDHw70fx8O94MfDvf/Hw73/xsK7/7y5
        sf+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//vLmu/7G0sf9Zkcz/In7l/yJ+
        5v8deOP/CF7Y/wBS0/80cc7/qbPAvsC5qyPLxsEAjYx/AAAAAAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fD
        vf/EwLn/raye/6qpmv+qqZr/qqma/6qpmv+qqZr/qqma/6qpmv+qqZr/qqma/6qpmv+qqZr/q6ma/6Kn
        n/9ZkMv/In7m/yJ+5v8bd+P/PHvU/6y0wP+2sqj/k5KFvYuKfSKNjH8AAAAAAAAAAADHw70Ax8O9H8fD
        veDHw73/x8O9/8fDvP/Dv7n/w7+4/8O/uP/Dv7j/w7+4/8O/uP/Dv7j/w7+4/8O/uP/Dv7j/w7+4/8O/
        uP/Dv7j/xMC4/7q8vP9imdb/IX7m/1mc6P/Q2+X/v7yy/5KRhP+Mi37/jYx/oo2MfwcAAAAAAAAAAMfD
        vQDHw70fx8O94MfDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/yMS9/7u+v/+ErNf/09/r/9vZz/+pqJn/k5KE/42Mf/+NjH/djYx/IgAA
        AAAAAAAAx8O9AMfDvR/Hw73gx8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8zHwf/Sz8f/rayd/6WklP+ioZL/k5KE/42M
        f86NjH8YAAAAAAAAAADHw70Ax8O9H8fDveDHw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8TAuf+zsKT/p6aW/6al
        lf+ioZHtk5KFY8vKtgAAAAAAAAAAAMfDvQDHw70fx8O94MfDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/IxL7/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/yMS+/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8bC
        u/+8ubDuq6mbfaallTqrqpkEqqmYAAAAAAAAAAAAx8O9AMfDvR/Hw73gx8O9/8O/uf+qqJ7/qqie/8O/
        uf/Hw73/x8O9/7OwqP+lopj/vLmy/8fDvf/Hw73/vLmy/6WimP+zsKj/x8O9/8fDvf/Dv7n/qqie/6qo
        nv/Dv7n/x8O9/8jDvuDIxL4fyMS+AAAAAAAAAAAAAAAAAAAAAADHw70Ax8O9HsfDvd/IxL7/uLWt/5eV
        iP+XlYj/uLWt/8jEvv/Dv7j/npyQ/5SThf+rqJ3/x8O9/8fDvf+rqJ3/lJOF/56ckP/Dv7j/yMS+/7i1
        rf+XlYj/l5WI/7i1rf/IxL7/x8O938fDvR7Hw70AAAAAAAAAAAAAAAAAAAAAAMfDvQDHw70Ox8O9w8jE
        vv+7uK//pqWV/6allf+7uK//yMS+/8O/uP+qqJr/paSU/7Gvo//Hw73/x8O9/7Gvo/+lpJT/qqia/8O/
        uP/IxL7/u7iv/6allf+mpZX/u7iv/8jEvv/Hw73Dx8O9DsfDvQAAAAAAAAAAAAAAAAAAAAAAx8O9AMfD
        vQDHw71PyMS+3ru4r/2mpZX/pqWV/7u4r/7IxL7+w7+4/qqpmv+lpJT/srCj/8fDvf7Hw73+srCj/6Wk
        lP+qqZr/w7+4/sjEvv67uK/+pqWV/6allf+7uK/9yMS+3sfDvU/Hw70Ax8O9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx8O9AMfDvQHLx8IlsrCkj6allf+mpZX+s7GllcnFwFa+u7JuqKaX66allf+rqpzFx8O9W8fD
        vVurqpzFpqWV/6iml+u+u7JuycXAVrOxpZWmpZX+pqWV/7KwpI/Lx8Ilx8O9AcfDvQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKallQCmpZVXpqWV/aallf2mpZVXpqWVAKallR2mpZXepqWV/6al
        laGmpZUBpqWVAaallaGmpZX/pqWV3qallR2mpZUApqWVV6allf2mpZX9pqWVV6allQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApqWVAKallSympZXcpqWV3KallSympZUApqWVCaal
        laimpZX2pqWVZqallQCmpZUApqWVZqallfampZWopqWVCaallQCmpZUspqWV3KalldympZUspqWVAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AAAD+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAA+AAAAHgAAAA4AAAAOAAAADgAAAB4AAAAeAA
        AAfgAAAH4AAAB/AAAA/wAAAP/CAEP/whhD8=
</value>
  </data>
</root>